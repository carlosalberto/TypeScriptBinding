IMMEDIATE:

* Provide a text style ourselves.
* Add support for on-fly-formatting (and formatting in general).
	* We have the Formatter, but need to incorporate a Parser to make the actual foo.
* Virtual Indent support, maybe? (As in C#)

* Add a TypeScriptLanguageBinding
* Simple empty file and project (xft and xpt).
* Add some serializable classes (compiler params, project params).
* Add some info in the msbuilditemtypes section?

* What if isSomethingSelected is something that can change across the state of the KeyPress() method?
* EditorIndentation.GuessSemicolon..() takes into account get/set. I'm not very sure we have them around for TS.
* Add a parser (this can be based on the TypeScript runtime itself).
* Add syntax mode.
* Add refactoring.
* Add a resolver.
* Add tooltip.
* Replace icons with some correct ones.
* Looks like enum declarations are gonna change a little while. Check later and update.
* Property formatting is *not* the same between C# and TS.
* Add 'with' support in the formatting area (indent, formattion options, etc)
* Maybe we should remove the Indexer properties in TypeScriptFormattingOptions?
* Array/list formatting (new line, brackets, etc)
* Should declare/constructor get special syntax highlighting?